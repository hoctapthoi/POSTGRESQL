 --- 1, install replmanager
curl https://download.postgresql.org/pub/repos/yum/16/redhat/rhel-8-x86_64/repmgr_16-5.5.0-1PGDG.rhel8.x86_64.rpm

--- 2, edit postgresql.conf
  - max_wal_sender = 10
  - max_replication_slots =10
  - wal_level = replica
  - hot_standby = on
  - archive_command = 'bin/true'
  - listen_address = '*'
  - shared_preload_libraries = 'repmgr'
  - wal_log_hints = on

--- 3, create user and db 
$ createuser  -s repmgr
$ createdb repmgr -O repmgr
# \l
# \du+

--- 4, configure pg_hba.conf
host    replication     repmgr          192.168.157.0/24        trust
host    repmgr          repmgr          192.168.157.0/24        trust
--- 5, create repmgr.conf on primary
# repmgr.conf
node_id=1
node_name= PostG
conninfo ='host=192.168.157.138 dbname=repmgr user=repmgr connect_timeout=2'
data_directory = '/u01/postgresql/16/PGDATA'
failover=automatic
promote_command='/usr/pgsql-16/bin/repmgr standby promote -f /u01/postgresql/16/repmgr.conf --log-to-file'
follow_command='/usr/pgsql-16/bin/repmgr standby follow -f /u01/postgresql/16/repmgr.conf --log-to-file --upstream-node-id=%n'
pg_bindir='/usr/pgsql-16/bin'
log_file='/u01/postgresql/16/repmgr.log'

--- 6, configure and check primary server
$ repmgr -f /u01/postgresql/16/repmgr.conf primary register
$ repmgr -f /u01/postgresql/16/repmgr.conf cluster show

--- 7, create repmgr.conf treen standby
# repmgr.conf
node_id=2
node_name= PostG-STB
conninfo ='host=192.168.157.139 dbname=repmgr user=repmgr connect_timeout=2'
data_directory = '/u01/postgresql/16/PGDATA'
failover=automatic
promote_command='/usr/pgsql-16/bin/repmgr standby promote -f /u01/postgresql/16/repmgr.conf --log-to-file'
follow_command='/usr/pgsql-16/bin/repmgr standby follow -f /u01/postgresql/16/repmgr.conf --log-to-file --upstream-node-id=%n'
pg_bindir='/usr/pgsql-16/bin'
log_file='/u01/postgresql/16/repmgr.log'

--- 8, check and create slave configure on standby
$ repmgr -h 192.168.157.138 -U repmgr -f /u01/postgresql/16/repmgr.conf standby clone --dry-run
$ repmgr -h 192.168.157.138 -U repmgr -f /u01/postgresql/16/repmgr.conf standby clone
$ pg_ctl start -D $PGDATA

--- 9, register and check cluster on standby
$ repmgr -f /u01/postgresql/16/repmgr.conf standby register
$ repmgr -f /u01/postgresql/16/repmgr.conf cluster show

--- 10, create log from repmgr deamon on both server
$ repmgrd -f /u01/postgresql/16/repmgr.conf

---- FAILOVER and node rejoin
--- after primary fail in a moment, standby server will be promote to new primary
--- after primary online, we need rejoin primary
--- perform checkpoint on standby server
$ repmgr -f /u01/postgresql/16/repmgr.conf node service --action=restart --checkpoint

--- rejoin on primary server
$ repmgr node rejoin -f /u01/postgresql/16/repmgr.conf -d 'host=192.168.157.139 dbname=repmgr user=repmgr' --force-rewind --config-files=postgres.conf,postgres.local.conf --verbose --dry-run

--- perform switch node (option) on current standby server
$ repmgr -f /u01/postgresql/16/repmgr.conf standby switchover

----- PG Pool II _ load balancing app --------
download rpm: https://www.pgpool.net/mediawiki/index.php/Downloads


