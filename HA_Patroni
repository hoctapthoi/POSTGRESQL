======= 0. stack = PostgreSQL + ETCD + Patroni + HAProxy
======= 1. install postgresql
======= 2. install ETCD
sudo yum install python3-psycopg2 python3-pip PyYAML
# download ETCD: https://github.com/etcd-io/etcd/releases . ex: etcd-v3.6.4-linux-amd64.tar.gz

tar -xvf etcd-v3.6.4-linux-amd64.tar.gz
cp etcd-v3.6.4-linux-amd64/etcd* /usr/local/bin/
chown postgres:postgres /usr/local/bin/etcd*
su - postgres
sudo mkdir -p /db/etcd
sudo chown postgres:postgres -R /db/etcd

sudo vi /etc/etcd.conf ## for node*:

name: post*    
data-dir: /db/etcd
initial-advertise-peer-urls: http://post*:2380
listen-peer-urls: http://0.0.0.0:2380
listen-client-urls: http://0.0.0.0:2379
advertise-client-urls: http://post*:2379
initial-cluster: "post1=http://post1:2380,post2=http://post2:2380,post3=http://post3:2380"

etcd --config-file /etc/etcd.conf &> /u01/app/16/etcd.log &

# test on node2:
[postgres@post2 ~]$ ETCDCTL_API=3 etcdctl put ha-cookbook-2 "Hello World!"
{"level":"warn","ts":"2025-08-30T12:06:30.196704-0400","caller":"flags/flag.go:94","msg":"unrecognized environment variable","environment-variable":"ETCDCTL_API=3"}
OK

[postgres@post3 ~]$ ETCDCTL_API=3 etcdctl put ha-cookbook-3 "Hello World!"
{"level":"warn","ts":"2025-08-30T12:06:48.021964-0400","caller":"flags/flag.go:94","msg":"unrecognized environment variable","environment-variable":"ETCDCTL_API=3"}
OK

# test on node1:
[postgres@post1 ~]$ ETCDCTL_API=3 etcdctl get ha-cookbook-1 ha-cookbook-9
{"level":"warn","ts":"2025-08-30T12:08:16.261197-0400","caller":"flags/flag.go:94","msg":"unrecognized environment variable","environment-variable":"ETCDCTL_API=3"}
ha-cookbook-2
Hello World!
ha-cookbook-3
Hello World!

# create etcd service:
sudo vi /etc/systemd/system/etcd.service
[Unit]
Description=etcd key-value store
Documentation=https://github.com/etcd-io/etcd
After=network.target

[Service]
User=postgres
Type=notify
ExecStart=/usr/local/bin/etcd --config-file /etc/etcd.conf
StandardOutput=file:/u01/app/16/etcd.log
StandardError=file:/u01/app/16/etcd.log
Restart=always
RestartSec=10s
LimitNOFILE=40000

[Install]
WantedBy=multi-user.target

# reload daemon: systemctl daemon-reload
# enable, start, stop etcd service
##### install patroni 
# download python3-cdiff python3-ydiff patroni-4.0.1-1PGDG 
# from https://download.postgresql.org/pub/repos/yum/common/redhat/rhel-8.9-x86_64/

yum install -y python3-pyyaml  python3-click python3-prettytable python3-psutil python3-urllib3
rpm -Uvh patroni-4.0.1-1PGDG.rhel8.noarch.rpm python3-cdiff-1.0-1.rhel8.noarch.rpm python3-ydiff-1.2-10.rhel8.noarch.rpm

su - postgres
sudo chown postgres:postgres /etc/patroni -R
cd /etc/patroni
vi stampede.yml

# start postgres and create replication user
sudo mkrdir -p /var/run/postgresql

# create Pantroni configure file on node1 and create another on each node
sudo vi /etc/patroni/stampede.yml
scope: stampede
name: post1

restapi:
  listen: post1:8008
  connect_address: post1:8008
  
etcd:
  host: post1:2379

bootstrap:
  dcs:
    ttl: 30
    loop_wait: 10
    retry_timeout: 10
    maximum_lag_on_failover: 1048576
  postgresql:
    use_pg_rewind: true
    use_slots: true
    parameters: 
      wal_level: logical
      wal_log_hints: "on"
  initdb:
    - encoding: UTF8
    - data-checksums
  pg_hba:
    - host replication rep_user 192.168.56.0/24 md5
    - host all all 192.168.56.0/24 md5
    - local all all peer
  users:
    admin:
      password: newPAS789
      options:
        - createrole
        - createdb
  
postgresql:
  listen: post1:5432
  connect_address: post1:5432
  data_dir: /u01/app/16/data
  bin_dir: /u01/app/16/init/bin
  pgpass: /tmp/pgpass0
  authentication:
    replication:
      username: rep_user
      password: newPAS789
    superuser:
      username: postgres
      password: newPAS789
  parameters:
    unix_socket_directories: '/var/run/postgresql'
    external_pid_file: '/var/run/postgresql/16-main.pid'
    logging_collector: "on"
    log_directory: "/u01/app/16"
    log_filename: "postgresql-16-main.log"

# audit configure file:
patroni --validate-config /etc/patroni/stampede.yml

# grant configure
sudo chmod 600 /etc/patroni/stampede.yml
